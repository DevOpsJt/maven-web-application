node ('Node1-JtTech') {

try{

  sendSlackNotifications('STARTED')
    
    	echo "The JobName is: ${env.JOB_NAME}"
	    echo "The Node is: ${env.NODE_NAME}"
	    echo "The Build number is: ${env.BUILD_NUMBER}"

    properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '', numToKeepStr: '2')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])

    def mavenHome = tool name: 'maven v3.9.6'
    
    stage ('CheckCode')
    {
        git branch: 'development', credentialsId: 'a7ee8193-1c8f-419b-8f36-deac9b60e1ba', url: 'https://github.com/DevOpsJt/maven-web-application.git'
    }
    
    stage ('Build')
    {
        sh "${mavenHome}/bin/mvn package"
    }
    
    stage ('SonarQubeReport')
    {
        sh "${mavenHome}/bin/mvn clean sonar:sonar"    
    }
    
    stage ('UploadArtifactsIntoNexus')
    {
        sh "${mavenHome}/bin/mvn clean deploy"
    }
    
    stage ('DeployToTomcat')
    {
        sshagent(['ed35074d-b48a-4117-bd3d-5db57ae416f9']) 
        {
        sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.45.103:/opt/apache-tomcat-9.0.86/webapps"    
        }
    }//stage closing

 */
  }//try closing
  catch(e){
  currentBuild.result="FAILURE"
  throw e
  }//catch closing
  finally{
  sendSlackNotifications(currentBuild.result)
  }

}//node closing

/*
//Code Snippet for sending slack notifications.

def slackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'
  //buildStatus = buildStatus ? "SUCCESS":"FAILURE"

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    colorName = 'ORANGE'
    colorCode = '#FFA500'
  } else if (buildStatus == 'SUCCESS') {
    colorName = 'GREEN'
    colorCode = '#00FF00'
  } else {
    colorName = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: "#walmart")
}

*/
